<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dadaban.repository.dao.TicketMapper" >
  <resultMap id="BaseResultMap" type="com.dadaban.repository.model.Ticket" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="limit_type" property="limitType" jdbcType="INTEGER" />
    <result column="limit_num" property="limitNum" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="seq" property="seq" jdbcType="INTEGER" />
    <result column="event_id" property="eventId" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="eff_start_time" property="effStartTime" jdbcType="TIMESTAMP" />
    <result column="eff_end_time" property="effEndTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createby" property="createby" jdbcType="INTEGER" />
    <result column="updateby" property="updateby" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="min_num" property="minNum" jdbcType="INTEGER" />
    <result column="max_num" property="maxNum" jdbcType="INTEGER" />
    <result column="need_audit" property="needAudit" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, type, limit_type, limit_num, price, seq, event_id, start_time, end_time, 
    eff_start_time, eff_end_time, remark, status, createby, updateby, createtime, updatetime, 
    min_num, max_num, need_audit
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dadaban.repository.model.TicketExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="page != null" >
      limit #{page.begin} , #{page.length}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ticket
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ticket
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dadaban.repository.model.TicketExample" >
    delete from ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dadaban.repository.model.Ticket" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ticket (name, type, limit_type, 
      limit_num, price, seq, 
      event_id, start_time, end_time, 
      eff_start_time, eff_end_time, remark, 
      status, createby, updateby, 
      createtime, updatetime, min_num, 
      max_num, need_audit)
    values (#{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{limitType,jdbcType=INTEGER}, 
      #{limitNum,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{seq,jdbcType=INTEGER}, 
      #{eventId,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{effStartTime,jdbcType=TIMESTAMP}, #{effEndTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createby,jdbcType=INTEGER}, #{updateby,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{minNum,jdbcType=INTEGER}, 
      #{maxNum,jdbcType=INTEGER}, #{needAudit,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dadaban.repository.model.Ticket" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ticket
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="limitType != null" >
        limit_type,
      </if>
      <if test="limitNum != null" >
        limit_num,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="seq != null" >
        seq,
      </if>
      <if test="eventId != null" >
        event_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="effStartTime != null" >
        eff_start_time,
      </if>
      <if test="effEndTime != null" >
        eff_end_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createby != null" >
        createby,
      </if>
      <if test="updateby != null" >
        updateby,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="minNum != null" >
        min_num,
      </if>
      <if test="maxNum != null" >
        max_num,
      </if>
      <if test="needAudit != null" >
        need_audit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="limitType != null" >
        #{limitType,jdbcType=INTEGER},
      </if>
      <if test="limitNum != null" >
        #{limitNum,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="seq != null" >
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="eventId != null" >
        #{eventId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="effStartTime != null" >
        #{effStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="effEndTime != null" >
        #{effEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createby != null" >
        #{createby,jdbcType=INTEGER},
      </if>
      <if test="updateby != null" >
        #{updateby,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="minNum != null" >
        #{minNum,jdbcType=INTEGER},
      </if>
      <if test="maxNum != null" >
        #{maxNum,jdbcType=INTEGER},
      </if>
      <if test="needAudit != null" >
        #{needAudit,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dadaban.repository.model.TicketExample" resultType="java.lang.Integer" >
    select count(*) from ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ticket
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.limitType != null" >
        limit_type = #{record.limitType,jdbcType=INTEGER},
      </if>
      <if test="record.limitNum != null" >
        limit_num = #{record.limitNum,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.seq != null" >
        seq = #{record.seq,jdbcType=INTEGER},
      </if>
      <if test="record.eventId != null" >
        event_id = #{record.eventId,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.effStartTime != null" >
        eff_start_time = #{record.effStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.effEndTime != null" >
        eff_end_time = #{record.effEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createby != null" >
        createby = #{record.createby,jdbcType=INTEGER},
      </if>
      <if test="record.updateby != null" >
        updateby = #{record.updateby,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.minNum != null" >
        min_num = #{record.minNum,jdbcType=INTEGER},
      </if>
      <if test="record.maxNum != null" >
        max_num = #{record.maxNum,jdbcType=INTEGER},
      </if>
      <if test="record.needAudit != null" >
        need_audit = #{record.needAudit,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ticket
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      limit_type = #{record.limitType,jdbcType=INTEGER},
      limit_num = #{record.limitNum,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      seq = #{record.seq,jdbcType=INTEGER},
      event_id = #{record.eventId,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      eff_start_time = #{record.effStartTime,jdbcType=TIMESTAMP},
      eff_end_time = #{record.effEndTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      createby = #{record.createby,jdbcType=INTEGER},
      updateby = #{record.updateby,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      min_num = #{record.minNum,jdbcType=INTEGER},
      max_num = #{record.maxNum,jdbcType=INTEGER},
      need_audit = #{record.needAudit,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dadaban.repository.model.Ticket" >
    update ticket
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="limitType != null" >
        limit_type = #{limitType,jdbcType=INTEGER},
      </if>
      <if test="limitNum != null" >
        limit_num = #{limitNum,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="seq != null" >
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="eventId != null" >
        event_id = #{eventId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="effStartTime != null" >
        eff_start_time = #{effStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="effEndTime != null" >
        eff_end_time = #{effEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createby != null" >
        createby = #{createby,jdbcType=INTEGER},
      </if>
      <if test="updateby != null" >
        updateby = #{updateby,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="minNum != null" >
        min_num = #{minNum,jdbcType=INTEGER},
      </if>
      <if test="maxNum != null" >
        max_num = #{maxNum,jdbcType=INTEGER},
      </if>
      <if test="needAudit != null" >
        need_audit = #{needAudit,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dadaban.repository.model.Ticket" >
    update ticket
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      limit_type = #{limitType,jdbcType=INTEGER},
      limit_num = #{limitNum,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      seq = #{seq,jdbcType=INTEGER},
      event_id = #{eventId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      eff_start_time = #{effStartTime,jdbcType=TIMESTAMP},
      eff_end_time = #{effEndTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      createby = #{createby,jdbcType=INTEGER},
      updateby = #{updateby,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      min_num = #{minNum,jdbcType=INTEGER},
      max_num = #{maxNum,jdbcType=INTEGER},
      need_audit = #{needAudit,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>